(self.webpackChunkbqplot_image_gl=self.webpackChunkbqplot_image_gl||[]).push([[509],{8522:function(e,t,s){"use strict";var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const a=i(s(9793)).BaseXYSelector,n=s(3871),r=s(4871),{applyStyles:o}=(s(491),s(5976)),l=function(){return s(491).event}.bind(this);t.BrushEllipseSelector=class extends a{constructor(){super(...arguments),this.brushStartPosition={x:0,y:0},this.moveStartPosition={x:0,y:0},this.reshapeStartAngle=0,this.reshapeStartRadii={rx:0,ry:0}}async render(){super.render();const e=this.create_scales();await Promise.all([this.mark_views_promise,e]),this.create_listeners();const t=n.select(this.d3el.node());t.attr("clip-path","url(#"+this.parent.clip_id+")"),this.eventElement=t.append("rect").attr("x",0).attr("y",0).attr("width",this.width).attr("height",this.height).attr("pointer-events","all").style("cursor","crosshair").style("visibility","hidden"),t.attr("class","selector brushintsel"),this.brush=t.append("g").style("visibility","visible"),this.d3ellipseHandle=this.brush.append("ellipse"),this.d3ellipse=this.brush.append("ellipse"),this.eventElement.call(r.drag().on("start",(()=>{const e=l();this._brushStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._brushDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._brushEnd({x:e.x,y:e.y})}))),this.brush.call(r.drag().on("start",(()=>{const e=l();this._moveStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._moveDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._moveEnd({x:e.x,y:e.y})}))),this.d3ellipseHandle.call(r.drag().on("start",(()=>{const e=l();this._reshapeStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._reshapeDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._reshapeEnd({x:e.x,y:e.y})}))),this.updateEllipse(),this.syncSelectionToMarks(),this.listenTo(this.model,"change:selected_x change:selected_y change:color change:style change:border_style change:rotate",(()=>this.updateEllipse())),this.listenTo(this.model,"change:selected_x change:selected_y change:rotate",this.syncSelectionToMarks)}update_xscale_domain(){super.update_xscale_domain(),this.x_scale&&this.y_scale&&this.d3ellipse&&this.updateEllipse()}update_yscale_domain(){super.update_yscale_domain(),this.x_scale&&this.y_scale&&this.d3ellipse&&this.updateEllipse()}relayout(){super.relayout(),this.x_scale.set_range(this.parent.padded_range("x",this.x_scale.model)),this.y_scale.set_range(this.parent.padded_range("y",this.y_scale.model)),this.eventElement.attr("width",this.parent.width-this.parent.margin.left-this.parent.margin.right).attr("height",this.parent.height-this.parent.margin.top-this.parent.margin.bottom),this.updateEllipse()}remove(){super.remove(),n.select(this.parent.bg_events.node()).on(".start .drag .end",null)}_brushStart({x:e,y:t}){console.log("start",e,t),this.brushStartPosition={x:e,y:t},this.model.set("brushing",!0),this.touch()}_brushDrag({x:e,y:t}){console.log("drag",e,t),this._brush({x:e,y:t})}_brushEnd({x:e,y:t}){console.log("end",e,t),this._brush({x:e,y:t}),this.model.set("brushing",!1),this.touch()}_brush({x:e,y:t}){const s=this.brushStartPosition.x,i=this.brushStartPosition.y,a=Math.abs(e-s),n=Math.abs(t-i);if(!this.model.get("pixel_aspect")&&(0==a||0==n))return console.log("cannot draw ellipse"),this.model.set("selected_x",null),this.model.set("selected_y",null),void this.touch();let r=this.model.get("pixel_aspect")||a/n;const o=Math.sqrt(n*n*r*r+a*a),l=o/r,[h,d,c,u]=[s-o,s+o,i-l,i+l];if(h!=d||c!=u){let e=[h,d].map((e=>this.x_scale.scale.invert(e))),t=[c,u].map((e=>this.y_scale.scale.invert(e)));this.model.set("selected_x",new Float32Array(e)),this.model.set("selected_y",new Float32Array(t)),this.touch()}else this.model.set("selected_x",null),this.model.set("selected_y",null),this.touch()}_moveStart({x:e,y:t}){this.moveStartPosition={x:e,y:t},this.model.set("brushing",!0),this.touch()}_moveDrag({x:e,y:t}){this._move({dx:e-this.moveStartPosition.x,dy:t-this.moveStartPosition.y}),this.moveStartPosition={x:e,y:t}}_moveEnd({x:e,y:t}){this._move({dx:e-this.moveStartPosition.x,dy:t-this.moveStartPosition.y}),this.model.set("brushing",!1),this.touch()}_move({dx:e,dy:t}){const{px1:s,px2:i,py1:a,py2:n}=this.calculatePixelCoordinates();let r=[s,i].map((t=>this.x_scale.scale.invert(t+e))),o=[a,n].map((e=>this.y_scale.scale.invert(e+t)));this.model.set("selected_x",new Float32Array(r)),this.model.set("selected_y",new Float32Array(o)),this.touch()}_reshapeStart({x:e,y:t}){const{cx:s,cy:i,rx:a,ry:n}=this.calculatePixelCoordinates();if(this.model.get("pixel_aspect"))this._brushStart({x:s,y:i}),this._brushDrag({x:e,y:t});else{const r=e-s,o=t-i;this.reshapeStartAngle=Math.atan2(a*o,n*r),this.reshapeStartRadii={rx:a,ry:n}}this.model.set("brushing",!0),this.touch()}_reshapeDrag({x:e,y:t}){this.model.get("pixel_aspect")?this._brushDrag({x:e,y:t}):this._reshape({x:e,y:t,angle:this.reshapeStartAngle})}_reshapeEnd({x:e,y:t}){this.model.get("pixel_aspect")?this._brushEnd({x:e,y:t}):this._reshape({x:e,y:t,angle:this.reshapeStartAngle}),this.model.set("brushing",!1),this.touch()}_reshape({x:e,y:t,angle:s}){const{cx:i,cy:a}=this.calculatePixelCoordinates();s=(s+2*Math.PI)%(2*Math.PI);for(let e=0;e<5;e++){const t=Math.PI*e/2,i=t-10*Math.PI/180,a=t+10*Math.PI/180;console.log("test angle",t,i,a,s>i&&s<a),s>i&&s<a&&(s=t)}s=(s+2*Math.PI)%(2*Math.PI);const n=e-i,r=t-a;let o=this.model.get("pixel_aspect"),l=n/Math.cos(s),h=r/Math.sin(s);s!=Math.PI/2&&s!=3*Math.PI/2||(l=o?h/o:this.reshapeStartRadii.rx),0!=s&&s!=Math.PI||(h=o?l*o:this.reshapeStartRadii.ry);const[d,c,u,m]=[i-l,i+l,a-h,a+h];let _=[d,c].map((e=>this.x_scale.scale.invert(e))),p=[u,m].map((e=>this.y_scale.scale.invert(e)));this.model.set("selected_x",new Float32Array(_)),this.model.set("selected_y",new Float32Array(p)),this.touch()}reset(){this.model.set("selected_x",null),this.model.set("selected_y",null),this.touch()}selected_changed(){}canDraw(){const e=this.model.get("selected_x"),t=this.model.get("selected_y");return Boolean(e)&&Boolean(t)}calculatePixelCoordinates(){if(!this.canDraw())throw new Error("No selection present");const e=this.model.get("selected_x"),t=this.model.get("selected_y");var s=(e,t)=>e-t;let i=[...e].sort(s),a=[...t].sort(s),[n,r]=i.map((e=>this.x_scale.scale(e))),[o,l]=a.map((e=>this.y_scale.scale(e)));return{px1:n,px2:r,py1:o,py2:l,cx:(n+r)/2,cy:(o+l)/2,rx:Math.abs(r-n)/2,ry:Math.abs(l-o)/2}}updateEllipse(e=0,t=0,s=0,i=0){if(this.canDraw()){const{cx:a,cy:n,rx:r,ry:l}=this.calculatePixelCoordinates();this.d3ellipse.attr("cx",a+e).attr("cy",n+t).attr("rx",r+s).attr("ry",l+i).style("fill",this.model.get("color")||"grey"),o(this.d3ellipse,this.model.get("style")),this.d3ellipseHandle.attr("cx",a+e).attr("cy",n+t).attr("rx",r+s).attr("ry",l+i).style("stroke",this.model.get("color")||"black"),o(this.d3ellipseHandle,this.model.get("border_style")),this.brush.attr("transform",`rotate(${this.model.get("rotate")}, ${a+e}, ${n+t})`),this.brush.node().style.display=""}else this.brush.node().style.display="none"}syncSelectionToMarks(){if(!this.canDraw())return;const{cx:e,cy:t,rx:s,ry:i}=this.calculatePixelCoordinates(),a=-this.model.get("rotate")*Math.PI/180,n=function(n){const[r,o]=n,l=(r-e)*Math.cos(a)-(o-t)*Math.sin(a)+e,h=(r-e)*Math.sin(a)+(o-t)*Math.cos(a)+t,d=(e-l)/s,c=(t-h)/i;return d*d+c*c<=1},r=function(e){return console.error("Rectangle selector not implemented"),!1};this.mark_views.forEach((e=>{e.selector_changed(n,r)}))}}},2321:(e,t,s)=>{"use strict";var i=s(1797).r;Object.defineProperty(t,"B",{value:!0});const a=s(9793).BrushSelectorModel;class n extends a{defaults(){return Object.assign({},a.prototype.defaults(),{_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,_model_name:"BrushEllipseSelectorModel",_view_name:"BrushEllipseSelector",pixel_aspect:null,rotate:0,style:{fill:"green",opacity:.3,cursor:"grab"},border_style:{fill:"none",stroke:"green",opacity:.3,cursor:"col-resize","stroke-width":"3px"}})}}n.serializers=Object.assign({},a.serializers),t.Z=n},5073:function(e,t,s){"use strict";var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const a=i(s(9793)).BaseXYSelector,n=s(3871),r=s(4871),{applyStyles:o}=(s(491),s(5976)),l=function(){return s(491).event}.bind(this);t.BrushRectangleSelector=class extends a{constructor(){super(...arguments),this.brushStartPosition={x:0,y:0},this.moveStartPosition={x:0,y:0},this.reshapeStartAngle=0,this.reshapeStartRadii={rx:0,ry:0}}async render(){super.render();const e=this.create_scales();await Promise.all([this.mark_views_promise,e]),this.create_listeners();const t=n.select(this.d3el.node());t.attr("clip-path","url(#"+this.parent.clip_id+")"),this.eventElement=t.append("rect").attr("x",0).attr("y",0).attr("width",this.width).attr("height",this.height).attr("pointer-events","all").style("cursor","crosshair").style("visibility","hidden"),t.attr("class","selector brushintsel"),this.point1=t.append("circle"),this.point2=t.append("circle"),this.brush=t.append("g").style("visibility","visible"),this.d3rectangleHandle=this.brush.append("rect"),this.d3rectangle=this.brush.append("rect"),this.eventElement.call(r.drag().on("start",(()=>{const e=l();this._brushStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._brushDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._brushEnd({x:e.x,y:e.y})}))),this.brush.call(r.drag().on("start",(()=>{const e=l();this._moveStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._moveDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._moveEnd({x:e.x,y:e.y})}))),this.d3rectangleHandle.call(r.drag().on("start",(()=>{const e=l();this._reshapeStart({x:e.x,y:e.y})})).on("drag",(()=>{const e=l();this._reshapeDrag({x:e.x,y:e.y})})).on("end",(()=>{const e=l();this._reshapeEnd({x:e.x,y:e.y})}))),this.updateRectangle(),this.syncSelectionToMarks(),this.listenTo(this.model,"change:selected_x change:selected_y change:color change:style change:border_style change:rotate",(()=>this.updateRectangle())),this.listenTo(this.model,"change:selected_x change:selected_y change:rotate",this.syncSelectionToMarks)}update_xscale_domain(){super.update_xscale_domain(),this.x_scale&&this.y_scale&&this.d3rectangle&&this.updateRectangle()}update_yscale_domain(){super.update_yscale_domain(),this.x_scale&&this.y_scale&&this.d3rectangle&&this.updateRectangle()}relayout(){super.relayout(),this.x_scale.set_range(this.parent.padded_range("x",this.x_scale.model)),this.y_scale.set_range(this.parent.padded_range("y",this.y_scale.model)),this.eventElement.attr("width",this.parent.width-this.parent.margin.left-this.parent.margin.right).attr("height",this.parent.height-this.parent.margin.top-this.parent.margin.bottom),this.updateRectangle()}remove(){super.remove(),n.select(this.parent.bg_events.node()).on(".start .drag .end",null)}_brushStart({x:e,y:t}){console.log("start",e,t),this.brushStartPosition={x:e,y:t},this.model.set("brushing",!0),this.touch()}_brushDrag({x:e,y:t}){this._brush({x:e,y:t})}_brushEnd({x:e,y:t}){console.log("end",e,t),this._brush({x:e,y:t}),this.model.set("brushing",!1),this.touch()}_brush({x:e,y:t}){const s=this.brushStartPosition.x,i=this.brushStartPosition.y;s==e&&i==t&&(this.model.set("selected_x",null),this.model.set("selected_y",null),this.touch()),this.model.set("selected_x",new Float32Array([s,e].map((e=>this.x_scale.scale.invert(e))))),this.model.set("selected_y",new Float32Array([i,t].map((e=>this.y_scale.scale.invert(e))))),this.touch()}_moveStart({x:e,y:t}){this.moveStartPosition={x:e,y:t},this.model.set("brushing",!0),this.touch()}_moveDrag({x:e,y:t}){this._move({dx:e-this.moveStartPosition.x,dy:t-this.moveStartPosition.y}),this.moveStartPosition={x:e,y:t}}_moveEnd({x:e,y:t}){this._move({dx:e-this.moveStartPosition.x,dy:t-this.moveStartPosition.y}),this.model.set("brushing",!1),this.touch()}_move({dx:e,dy:t}){const{px1:s,px2:i,py1:a,py2:n}=this.calculatePixelCoordinates();let r=[s,i].map((t=>this.x_scale.scale.invert(t+e))),o=[a,n].map((e=>this.y_scale.scale.invert(e+t)));this.model.set("selected_x",new Float32Array(r)),this.model.set("selected_y",new Float32Array(o)),this.touch()}_reshapeStart({x:e,y:t}){const{cx:s,cy:i,rx:a,ry:n}=this.calculatePixelCoordinates(),r=e-s,o=t-i;this.reshapeStartAngle=Math.atan2(a*o,n*r),this.reshapeStartRadii={rx:a,ry:n},this.model.set("brushing",!0),this.touch()}_reshapeDrag({x:e,y:t}){this._reshape({x:e,y:t,angle:this.reshapeStartAngle})}_reshapeEnd({x:e,y:t}){this._reshape({x:e,y:t,angle:this.reshapeStartAngle}),this.model.set("brushing",!1),this.touch()}_reshape({x:e,y:t,angle:s}){const{cx:i,cy:a}=this.calculatePixelCoordinates();s=(s+2*Math.PI)%(2*Math.PI);for(let e=0;e<5;e++){const t=Math.PI*e/2,i=t-45*Math.PI/180,a=t+45*Math.PI/180;s>i&&s<a&&(s=t)}s=(s+2*Math.PI)%(2*Math.PI);const n=t-a;let r=(e-i)/Math.cos(s),o=n/Math.sin(s);s!=Math.PI/2&&s!=3*Math.PI/2||(r=this.reshapeStartRadii.rx),0!=s&&s!=Math.PI||(o=this.reshapeStartRadii.ry);const[l,h,d,c]=[i-r,i+r,a-o,a+o];let u=[l,h].map((e=>this.x_scale.scale.invert(e))),m=[d,c].map((e=>this.y_scale.scale.invert(e)));this.model.set("selected_x",new Float32Array(u)),this.model.set("selected_y",new Float32Array(m)),this.touch()}reset(){this.model.set("selected_x",null),this.model.set("selected_y",null),this.touch()}selected_changed(){}canDraw(){const e=this.model.get("selected_x"),t=this.model.get("selected_y");return Boolean(e)&&Boolean(t)}calculatePixelCoordinates(){if(!this.canDraw())throw new Error("No selection present");const e=this.model.get("selected_x"),t=this.model.get("selected_y");var s=(e,t)=>e-t;let i=[...e].sort(s),a=[...t].sort(s),[n,r]=i.map((e=>this.x_scale.scale(e))),[o,l]=a.map((e=>this.y_scale.scale(e)));return{px1:n,px2:r,py1:o,py2:l,cx:(n+r)/2,cy:(o+l)/2,rx:Math.abs(r-n)/2,ry:Math.abs(l-o)/2}}updateRectangle(e=0,t=0,s=0,i=0){if(this.canDraw()){const{px1:s,px2:i,py1:a,py2:n,cx:r,cy:l}=this.calculatePixelCoordinates(),[h,d,c,u]=[s+e,n+t,i-s,a-n];this.d3rectangle.attr("x",h).attr("y",d).attr("width",c).attr("height",u).style("fill",this.model.get("color")||"grey"),o(this.d3rectangle,this.model.get("style")),this.d3rectangleHandle.attr("x",h).attr("y",d).attr("width",c).attr("height",u).style("stroke",this.model.get("color")||"black"),o(this.d3rectangleHandle,this.model.get("border_style")),this.brush.attr("transform",`rotate(${this.model.get("rotate")}, ${r+e}, ${l+t})`),this.brush.node().style.display=""}else this.brush.node().style.display="none"}syncSelectionToMarks(){if(!this.canDraw())return;const{px1:e,px2:t,py1:s,py2:i,cx:a,cy:n}=this.calculatePixelCoordinates(),r=-this.model.get("rotate")*Math.PI/180,o=function(o){const[l,h]=o,d=(l-a)*Math.cos(r)-(h-n)*Math.sin(r)+a,c=(l-a)*Math.sin(r)+(h-n)*Math.cos(r)+n;return d>=e&&d<=t&&c>=i&&c<=s},l=function(e){return console.error("Rectangle selector not implemented"),!1};this.mark_views.forEach((e=>{e.selector_changed(o,l)}))}}},8840:(e,t,s)=>{"use strict";var i=s(1797).r;const a=s(9793).BrushSelectorModel;class n extends a{defaults(){return Object.assign({},a.prototype.defaults(),{_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,_model_name:"BrushRectangleSelectorModel",_view_name:"BrushRectangleSelector",rotate:0,style:{fill:"green",opacity:.3,cursor:"grab"},border_style:{fill:"none",stroke:"green",opacity:.3,cursor:"col-resize","stroke-width":"3px"}})}}n.serializers=Object.assign({},a.serializers),t.q=n},7864:function(e,t,s){"use strict";var i=s(1797).r;Object.defineProperty(t,"__esModule",{value:!0});const a=s(9793),n=s(6300),r=s(3871),o=s(4871),l=s(1042),h=s(491),d=function(){return s(491).event||window.event}.bind(this),c=["click","dblclick","mouseenter","mouseleave","contextmenu"],u=["keydown","keyup"],m=["mousemove"];class _ extends n.WidgetModel{defaults(){return Object.assign({},n.WidgetModel.prototype.defaults(),{_model_name:"MouseInteractionModel",_view_name:"MouseInteraction",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,scale_x:null,scale_y:null,scale_y:null,move_throttle:50,cursor:"auto",next:null,events:[]})}}_.serializers=Object.assign({},n.WidgetModel.serializers,{x_scale:{deserialize:n.unpack_models},y_scale:{deserialize:n.unpack_models},next:{deserialize:n.unpack_models}}),t.MouseInteractionModel=_;class p extends a.Interaction{async render(){super.render(),this.eventElement=r.select(this.parent.interaction.node()),this.drag=o.drag(),this.nextView=null,this.x_scale=await this.create_child_view(this.model.get("x_scale")),this.y_scale=await this.create_child_view(this.model.get("y_scale")),this.last_mouse_point=[-1,-1],this.parent.on("margin_updated",this.updateScaleRanges,this),this.updateScaleRanges();const e=()=>{this.eventElement.node().style.cursor=this.model.get("cursor")};this.listenTo(this.model,"change:cursor",e),this.listenTo(this.model,"change:next",this.updateNextInteract),e();const t=()=>{this._emitThrottled=l.throttle(this._emit,this.model.get("move_throttle"))};t(),this.listenTo(this.model,"change:move_throttle",t),this.listenTo(this.model,"change:events",(()=>{this.unbindEvents(),this.bindEvents()})),this.bindEvents(),this.updateNextInteract()}bindEvents(){this.eventEnabled("dragstart")&&this.eventElement.call(this.drag.on(this._eventName("start"),(()=>{const e=d();this._emit("dragstart",{x:e.x,y:e.y})}))),this.eventEnabled("dragmove")&&this.eventElement.call(this.drag.on(this._eventName("drag"),(()=>{const e=d();this._emit("dragmove",{x:e.x,y:e.y})}))),this.eventEnabled("dragend")&&this.eventElement.call(this.drag.on(this._eventName("end"),(()=>{const e=d();this._emit("dragend",{x:e.x,y:e.y})}))),c.forEach((e=>{this.eventEnabled(e)&&this.eventElement.on(this._eventName(e),(()=>{this._emitThrottled.flush(),"mouseleave"!==e&&(this.parent.el.setAttribute("tabindex",-1),this.parent.el.focus({preventScroll:!0})),"mouseleave"===e&&this.parent.el.removeAttribute("tabindex");const t=d(),[s,i]=h.clientPoint(this.eventElement.node(),t);return this.model.get("events"),"contextmenu"==e&&this.eventEnabled("contextmenu")&&(t.preventDefault(),t.stopPropagation()),this._emit(e,{x:s,y:i},{button:t.button,altKey:t.altKey,ctrlKey:t.ctrlKey,metaKey:t.metaKey}),!1}))})),u.forEach((e=>{this.eventEnabled(e)&&r.select(this.parent.el).on(this._eventName(e),(()=>{this._emitThrottled.flush();const t=d(),[s,i]=this.last_mouse_point;return t.preventDefault(),t.stopPropagation(),this._emit(e,{x:s,y:i},{code:t.code,charCode:t.charCode,key:t.key,keyCode:t.keyCode,altKey:t.altKey,ctrlKey:t.ctrlKey,metaKey:t.metaKey}),!1}))})),m.forEach((e=>{this.eventEnabled(e)&&this.eventElement.on(this._eventName(e),(()=>{const t=d(),[s,i]=h.clientPoint(this.eventElement.node(),t);this.last_mouse_point=[s,i],this._emitThrottled(e,{x:s,y:i})}))}))}_eventName(e){return`${e}.${this.cid}`}unbindEvents(){this.eventElement.on(this._eventName(""),null),r.select(this.parent.el).on(this._eventName(""),null),this.drag.on(".drag",null)}eventEnabled(e){const t=this.model.get("events");return null==t||t.includes(e)}async updateNextInteract(){await this.displayed;const e=this.model.get("next");if(this.nextView&&(this.nextView.remove(),this.unbindEvents(),this.bindEvents()),!e)return;const t=await this.parent.create_child_view(e);e!==this.model.get("next")?(t.remove(),this.unbindEvents(),this.bindEvents()):(this.nextView=t,this.parent.interaction.node().appendChild(this.nextView.el),this.parent.displayed.then((()=>{this.nextView.trigger("displayed")})))}updateScaleRanges(){this.x_scale.set_range(this.parent.padded_range("x",this.x_scale.model)),this.y_scale.set_range(this.parent.padded_range("y",this.y_scale.model))}remove(){super.remove(),this.nextView&&this.nextView.remove(),this.unbindEvents(),this.parent.off("margin_updated",this.updateScaleRanges,this),this.parent.el.removeAttribute("tabindex"),this._emitThrottled.flush()}_emit(e,{x:t,y:s},i){if(!this.eventEnabled(e))return;let a={x:this.x_scale.scale.invert(t),y:this.y_scale.scale.invert(s)};this.send({event:e,pixel:{x:t,y:s},domain:a,...i})}}t.MouseInteraction=p},8724:(e,t,s)=>{"use strict";var i=s(1797).r;const a=s(6300);class n extends a.DOMWidgetModel{defaults(){return Object.assign({},a.DOMWidgetModel.prototype.defaults(),{_model_name:"ViewListenerModel",_view_name:"ViewListener",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,widget:null,css_selector:null,view_data:{}})}initialize(e,t){super.initialize(e,t),this._cleanups=[],this.knownViews=new Set,(e=>{"number"!=typeof e.get("_view_count")&&e.set("_view_count",Object.values(e.views).length),this.listenTo(e,"change:_view_count",this._updateViews),this._updateViews()})(this.get("widget")),window.lastViewListenerModel=this,window.addEventListener("focus",(()=>{this._updateAllViewData()}))}async _getViews(){const e=this.get("widget");return await Promise.all(Object.values(e.views))}async _updateViews(){this._cleanups.forEach((e=>e())),this._cleanups=[];const e=await this._getViews();await Promise.all(e.map((e=>e.displayed))),await Promise.all(e.map((e=>e.layoutPromise))),this.set("view_data",{});const t=this.get("css_selector");this._updateAllViewData(),e.forEach((e=>{const s=new ResizeObserver((t=>{this._updateViewData(e,!0)}));let i=e.el;if(i=t?i.querySelector(t):i,i){s.observe(i);const e=()=>s.disconnect();this._cleanups.push(e)}else console.error("could not find element with css selector",t)}))}async _updateViewData(e,t=!1,s=!1){const i=this.get("css_selector");let a=e.el;if(a=i?a.querySelector(i):a,a){const{x:i,y:n,width:r,height:o}=a.getBoundingClientRect(),l=this.get("view_data");let h=l[e.cid]?.resized_at,d=l[e.cid]?.focused_at;const c=(new Date).toISOString().replace("Z","+00:00");h=t||void 0===h?c:h,d=s||void 0===d?c:d,this.send({event:"set_view_data",id:e.cid,data:{x:i,y:n,width:r,height:o,resized_at:h,focused_at:d}})}else console.error("could not find element with css selector",i)}async _updateAllViewData(){const e=await this._getViews(),t=new Set;e.forEach((e=>{t.add(e.cid),this.knownViews.add(e.cid),this._updateViewData(e,!0,!0)})),[...this.knownViews].filter((e=>!t.has(e))).forEach((e=>{this.send({event:"remove_view_data",id:e}),this.knownViews.delete(e)}))}}n.serializers=Object.assign({},a.DOMWidgetModel.serializers,{widget:{deserialize:a.unpack_models}}),t.rr=n;class r extends a.DOMWidgetView{async render(){const e=await super.render();return this.renderJSON(),this.model.on("change:view_data",this.renderJSON,this),window.lastViewListenerView=this,e}renderJSON(){const e=JSON.stringify(this.model.get("view_data"),null,4),t=this.model.get("widget").get("_view_count");this.el.innerHTML=`viewcount: ${t}: <br> <pre>${e}</pre>`}}t.s9=r},6987:(e,t,s)=>{"use strict";s.d(t,{M:()=>d,W:()=>c});var i=s(9793),a=s(6300),n=s(6694),r=s(7929),o=s(3871),l=s(9980),h=s(1797).r;class d extends i.MarkModel{defaults(){return _.extend(i.MarkModel.prototype.defaults(),{_model_name:"ContourModel",_view_name:"ContourView",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:h,_view_module_version:h,image:null,level:null,color:null,scales_metadata:{x:{orientation:"horizontal",dimension:"x"},y:{orientation:"vertical",dimension:"y"}}})}initialize(e,t){super.initialize(e,t),this.on_some_change(["level","contour_lines"],this.update_data,this),this.update_data()}async update_data(){const e=this.get("image"),t=this.get("level");if(this.thresholds=Array.isArray(t)?t:[t],e){const t=e.get("image");let i=null;if(t.image){const e=t.image;this.width=e.width,this.height=e.height;const a=document.createElement("canvas");a.width=this.width,a.height=this.height;const n=a.getContext("2d");n.drawImage(e,0,0);const r=n.getImageData(0,0,e.width,e.height),{min:o,max:l}=t;i=new Float32Array(r.data.length/4);for(var s=0;s<i.length;s++)i[s]=r.data[4*s]/255*(l-o)+o}else this.width=t.shape[1],this.height=t.shape[0],i=t.data;this.contours=this.thresholds.map((e=>n.contours().size([this.width,this.height]).contour(i,[e])))}else{this.width=1,this.height=1;const e=this.get("contour_lines");this.contours=e.map((e=>({type:"MultiLineString",coordinates:e.map((e=>{for(var t=[],s=0;s<e.size/2;s++)t.push([e.get(s,0),e.get(s,1)]);return t}))})))}this.trigger("data_updated")}}class c extends i.Mark{create_listeners(){super.create_listeners(),this.listenTo(this.model,"change:label_steps change:label",(()=>{this.updateLabels()})),this.listenTo(this.parent,"margin_updated",(()=>{this.set_ranges(),this.updatePaths(),this.updateLabels()})),this.listenTo(this.model,"change:color",(()=>{this.updatePaths(),this.updateLabels()})),this.listenTo(this.model,"data_updated",(()=>{this.updatePaths(),this.updateLabels()}))}set_positional_scales(){var e=this.scales.x,t=this.scales.y;this.listenTo(e,"domain_changed",(function(){this.updatePaths(),this.updateLabels()})),this.listenTo(t,"domain_changed",(function(){this.updatePaths(),this.updateLabels()}))}updateColors(){const e=this.getColor();this.paths.data(this.model.thresholds).attr("stroke",this.getColor.bind(this)),this.d3path.attr("stroke",e),this.d3label_group.selectAll("text").attr("fill",e)}getColor(e,t){let s=this.model.get("color");if(s){const e=Array.isArray(s)?s:[s];return e[t%e.length]}this.model;var i=this.scales.image.model.color_range,a=o.scaleLinear().range(i).domain(this.scales.image.model.domain);const n=this.scales.image.model.domain[0],r=this.scales.image.model.domain[this.scales.image.model.domain.length-1]-n;return s=a((e-n+r/2)%r+n),s}createPath(e){const t=this.scales.x,s=this.scales.y,i=this.model;var a=r.geoTransform({point:function(e,a){this.stream.point(t.scale(e/i.width),s.scale(a/i.height))}});return r.geoPath(a)(this.model.contours[e])}render(){const e=super.render();return e.then((()=>{this.draw(),this.create_listeners()})),e}set_ranges(){var e=this.scales.x,t=this.scales.y;e&&e.set_range(this.parent.padded_range("x",e.model)),t&&t.set_range(this.parent.padded_range("y",t.model))}draw(){this.d3path=this.d3el.append("g"),this.d3label_group=this.d3el.append("g"),this.updatePaths(),this.updateLabels()}updatePaths(){this.paths=this.d3el.select("g").selectAll("path").data(this.model.thresholds);const e=this.paths.enter().append("path");this.paths.merge(e).attr("stroke",this.getColor.bind(this)).attr("fill","none").attr("d",((e,t)=>this.createPath(t))).attr("mask",this.mask_id),this.paths.exit().remove()}updateLabels(){const e=this.scales.x,t=this.scales.y,s=this.model;this.d3label_group.html(null),this.parent.margin,this.model.contours.forEach(((i,a)=>{const n=this.getColor(s.thresholds[a],a);let r=this.model.get("label");if(r){const e=Array.isArray(r)?r:[r];r=e[a%e.length]}else r=String(s.thresholds[a]);const o="MultiPolygon"==i.type;i.coordinates.forEach((i=>{(o?i:[i]).forEach(((i,a)=>{const l=o?i.slice(1):i;var h=0;const d=this.model.get("label_steps"),c=t=>e.scale(t/s.width),u=e=>t.scale(e/s.height);for(;h<l.length;){const e=(h-1+l.length)%l.length,t=(h+1+l.length)%l.length,s=c(l[h][0]),i=u(l[h][1]),a=c(l[e][0]),o=u(l[e][1]),_=c(l[t][0])-a,p=u(l[t][1])-o;var m=(180*Math.atan2(p,_)/Math.PI+180)%360;if(m>270&&(m=(m+180)%360),m>90&&(m=(m+180)%360),this.d3label_group.append("text").text(r).attr("transform",`translate(${s}, ${i}) rotate(${m})`).attr("text-anchor","middle").attr("fill",n),(h+=d)>l.length-1.2*d)break}}))}))}))}}d.serializers=Object.assign({},i.MarkModel.serializers,{image:{deserialize:a.unpack_models},contour_lines:{deserialize:(e,t)=>e.map((e=>e.map((e=>{let t={buffer:e.value,dtype:e.dtype,shape:e.shape};return l.JSONToArray(t)}))))}})},2377:(e,t,s)=>{var i=s(7622),a=s(2863).LineGeometry,n=s(7234).LineMaterial,r=function(e,t){i.Mesh.call(this),this.type="Line2",this.geometry=void 0!==e?e:new a,this.material=void 0!==t?t:new n({color:16777215*Math.random()})};r.prototype=Object.assign(Object.create(i.Mesh.prototype),{constructor:r,isLine2:!0,copy:function(e){return this}}),e.exports={Line2:r}},2863:(e,t,s)=>{var i=s(9357).LineSegmentsGeometry,a=function(){i.call(this),this.type="LineGeometry"};a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,isLineGeometry:!0,setPositions:function(e){for(var t=e.length-3,s=new Float32Array(2*t),a=0;a<t;a+=3)s[2*a]=e[a],s[2*a+1]=e[a+1],s[2*a+2]=e[a+2],s[2*a+3]=e[a+3],s[2*a+4]=e[a+4],s[2*a+5]=e[a+5];return i.prototype.setPositions.call(this,s),this},setColors:function(e){for(var t=e.length-3,s=new Float32Array(2*t),a=0;a<t;a+=3)s[2*a]=e[a],s[2*a+1]=e[a+1],s[2*a+2]=e[a+2],s[2*a+3]=e[a+3],s[2*a+4]=e[a+4],s[2*a+5]=e[a+5];return i.prototype.setColors.call(this,s),this},fromLine:function(e){var t=e.geometry;return t.isGeometry?this.setPositions(t.vertices):t.isBufferGeometry&&this.setPositions(t.position.array),this},copy:function(e){return this}}),e.exports={LineGeometry:a}},7234:(e,t,s)=>{var i=s(7622);lineUniforms={linewidth:{value:1},resolution:{value:new i.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},lineShaders={uniforms:i.UniformsUtils.merge([i.UniformsLib.common,i.UniformsLib.fog,lineUniforms]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}\n\t\t"};var a=function(e){i.ShaderMaterial.call(this,{type:"LineMaterial",uniforms:i.UniformsUtils.clone(lineShaders.uniforms),vertexShader:lineShaders.vertexShader,fragmentShader:lineShaders.fragmentShader}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}}}),this.setValues(e)};(a.prototype=Object.create(i.ShaderMaterial.prototype)).constructor=a,a.prototype.isLineMaterial=!0,a.prototype.copy=function(e){return i.ShaderMaterial.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.resolution=e.resolution,this.dashScale=e.dashScale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this},e.exports={LineMaterial:a}},9357:(e,t,s)=>{var i,a,n=s(7622),r=function(){n.InstancedBufferGeometry.call(this),this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.addAttribute("position",new n.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.addAttribute("uv",new n.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))};r.prototype=Object.assign(Object.create(n.InstancedBufferGeometry.prototype),{constructor:r,isLineSegmentsGeometry:!0,applyMatrix:function(e){var t=this.attributes.instanceStart,s=this.attributes.instanceEnd;return void 0!==t&&(e.applyToBufferAttribute(t),e.applyToBufferAttribute(s),t.data.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var s=new n.InstancedInterleavedBuffer(t,6,1);return this.addAttribute("instanceStart",new n.InterleavedBufferAttribute(s,3,0)),this.addAttribute("instanceEnd",new n.InterleavedBufferAttribute(s,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this},setColors:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var s=new n.InstancedInterleavedBuffer(t,6,1);return this.addAttribute("instanceColorStart",new n.InterleavedBufferAttribute(s,3,0)),this.addAttribute("instanceColorEnd",new n.InterleavedBufferAttribute(s,3,3)),this},fromWireframeGeometry:function(e){return this.setPositions(e.attributes.position.array),this},fromEdgesGeometry:function(e){return this.setPositions(e.attributes.position.array),this},fromLineSegements:function(e){var t=e.geometry;return t.isGeometry?this.setPositions(t.vertices):t.isBufferGeometry&&this.setPositions(t.position.array),this},computeBoundingBox:(a=new n.Box3,function(){null===this.boundingBox&&(this.boundingBox=new n.Box3);var e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),a.setFromBufferAttribute(t),this.boundingBox.union(a))}),computeBoundingSphere:(i=new n.Vector3,function(){null===this.boundingSphere&&(this.boundingSphere=new n.Sphere),null===this.boundingBox&&this.computeBoundingBox();var e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){var s=this.boundingSphere.center;this.boundingBox.getCenter(s);for(var a=0,r=0,o=e.count;r<o;r++)i.fromBufferAttribute(e,r),a=Math.max(a,s.distanceToSquared(i)),i.fromBufferAttribute(t,r),a=Math.max(a,s.distanceToSquared(i));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error("LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}),toJSON:function(){},clone:function(){},copy:function(e){return this}}),e.exports={LineSegmentsGeometry:r}},8279:(e,t,s)=>{"use strict";s.d(t,{S:()=>u,y:()=>m});var i=s(1797).r,a=s(6300),n=s(1042),r=s(3871),o=s(9793),l=s(7622),h={nearest:l.NearestFilter,bilinear:l.LinearFilter},d=s(9980),c=s(5883);class u extends o.MarkModel{defaults(){return n.extend(o.MarkModel.prototype.defaults(),{_model_name:"ImageGLModel",_view_name:"ImageGLView",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,interpolation:"nearest",opacity:1,x:1,y:1,scales_metadata:{x:{orientation:"horizontal",dimension:"x"},y:{orientation:"vertical",dimension:"y"}}})}initialize(e,t){super.initialize(e,t),this.on_some_change(["x","y"],this.update_data,this),this.on_some_change(["preserve_domain"],this.update_domains,this),this.listenTo(this,"change:image",(()=>{const e=this.previous("image");e.image&&e.image.src&&URL.revokeObjectURL(e.image.src)}),this),this.update_data()}close(e){const t=this.get("image");return t.image&&t.image.src&&URL.revokeObjectURL(previous.image.src),super.close(e)}update_data(){this.mark_data={x:this.get("x"),y:this.get("y")},this.update_domains(),this.trigger("data_updated")}update_domains(){if(this.mark_data){var e=this.get("scales"),t=e.x,s=e.y;t&&(this.get("preserve_domain").x?t.del_domain([],this.model_id+"_x"):t.compute_and_set_domain(this.mark_data.x,this.model_id+"_x")),s&&(this.get("preserve_domain").y?s.del_domain([],this.model_id+"_y"):s.compute_and_set_domain(this.mark_data.y,this.model_id+"_y"))}}}u.serializers=Object.assign({},o.MarkModel.serializers,{x:c.array_or_json,y:c.array_or_json,image:{deserialize:async(e,t)=>{if("image"==e.type){let t=new Image;const s=new Blob([e.data],{type:`image/${e.format}`}),i=URL.createObjectURL(s);return t.src=i,await new Promise(((e,s)=>{t.onload=e,t.onerror=s})),{image:t,min:e.min,max:e.max,use_colormap:e.use_colormap}}{let t={buffer:e.value,dtype:e.dtype,shape:e.shape};return d.JSONToArray(t)}},serialize:e=>{const{buffer:t,dtype:s,shape:i}=d.arrayToJSON(e);return{value:t,dtype:s,shape:i}}}});class m extends o.Mark{render(){var e=super.render();return window.last_image=this,this.image_plane=new l.PlaneBufferGeometry(1,1),this.image_material=new l.ShaderMaterial({uniforms:{image:{type:"t",value:null},colormap:{type:"t",value:null},color_min:{type:"f",value:0},color_max:{type:"f",value:1},domain_x:{type:"2f",value:[0,1]},domain_y:{type:"2f",value:[0,1]},range_x:{type:"2f",value:[0,1]},range_y:{type:"2f",value:[0,1]},image_domain_x:{type:"2f",value:[0,1]},image_domain_y:{type:"2f",value:[0,1]},range_image:{type:"2f",value:[0,1]},opacity:{type:"f",value:1}},vertexShader:s(1741).A,fragmentShader:s(5199).A,transparent:!0,alphaTest:.01,blending:l.CustomBlending,depthTest:!1,depthWrite:!1,blendEquation:l.AddEquation,blendSrc:l.OneFactor,blendDst:l.OneMinusSrcAlphaFactor,blendEquationAlpha:l.AddEquation,blendSrcAlpha:l.OneFactor,blendDstAlpha:l.OneMinusSrcAlphaFactor}),this.image_mesh=new l.Mesh(this.image_plane,this.image_material),this.camera=new l.OrthographicCamera(-.5,.5,.5,-.5,-1e4,1e4),this.camera.position.z=10,this.scene=new l.Scene,this.scene.add(this.image_mesh),e.then((()=>{this.create_listeners(),this.update_minmax(),this.update_colormap(),this.update_opacity(),this.update_image(),this.update_scene(),this.listenTo(this.parent,"margin_updated",(()=>{this.update_scene(),this.draw()}))}))}set_positional_scales(){var e=this.scales.x,t=this.scales.y;this.listenTo(e,"domain_changed",(function(){this.model.dirty||this.update_scene()})),this.listenTo(t,"domain_changed",(function(){this.model.dirty||this.update_scene()}))}set_ranges(){var e=this.scales.x,t=this.scales.y;e&&e.set_range(this.parent.padded_range("x",e.model)),t&&t.set_range(this.parent.padded_range("y",t.model))}create_listeners(){super.create_listeners(),this.listenTo(this.model,"change:interpolation",(()=>{this.texture&&(this.texture.magFilter=h[this.model.get("interpolation")],this.texture.minFilter=h[this.model.get("interpolation")],this.texture.needsUpdate=!0,this.image_material.needsUpdate=!0,this.update_scene())}));var e=()=>{this.image_material.visible=this.model.get("visible"),this.update_scene()};this.listenTo(this.model,"change:visible",e,this),e(),this.listenTo(this.model,"change:opacity",(()=>{this.update_opacity(),this.update_scene()}),this),this.listenTo(this.scales.image.model,"domain_changed",(()=>{this.update_minmax(),this.update_scene()}),this),this.listenTo(this.scales.image.model,"colors_changed",(()=>{this.update_colormap(),this.update_scene()}),this),this.listenTo(this.scales.image.model,"domain_changed",this.update_image,this),this.listenTo(this.model,"change:image",(()=>{this.update_image(),this.update_scene()}),this),this.listenTo(this.model,"data_updated",(function(){this.update_scene(!0)}),this)}update_minmax(){var e=this.scales.image.model.get("min"),t=this.scales.image.model.get("max");"number"!=typeof e&&(e=0),"number"!=typeof t&&(t=0),this.image_material.uniforms.color_min.value=e,this.image_material.uniforms.color_max.value=t}update_opacity(){this.image_material.uniforms.opacity.value=this.model.get("opacity")}update_colormap(){var e=this.scales.image.model.color_range,t=r.scaleLinear().range(e).domain(n.range(e.length).map((t=>t/(e.length-1)))),s=[];n.map(n.range(256),(e=>{var i=t(e/255);i=function(e){var t=/.([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})/.exec(e);if(t)return[parseInt("0x"+t[1]),parseInt("0x"+t[2]),parseInt("0x"+t[3])];var s=/rgb\((\d+), (\d+), (\d+)\)/.exec(e);return s?[parseInt(s[1]),parseInt(s[2]),parseInt(s[3])]:void 0}(i),s.push(i[0],i[1],i[2])})),s=new Uint8Array(s),this.colormap_texture=new l.DataTexture(s,256,1,l.RGBFormat,l.UnsignedByteType),this.colormap_texture.needsUpdate=!0,this.image_material.uniforms.colormap.value=this.colormap_texture}update_image(e){var t=this.model.get("image"),s=null;if(t.image)this.texture&&this.texture.dispose(),this.texture=new l.Texture(t.image),this.texture.needsUpdate=!0,this.texture.flipY=!1,this.image_material.uniforms.image.value=this.texture,this.image_material.defines.USE_COLORMAP=t.use_colormap,this.image_material.needsUpdate=!0,this.image_material.uniforms.range_image.value=[t.min,t.max];else{this.image_material.uniforms.range_image.value=[0,1];var i=t.data;if(i instanceof Uint8Array)s=l.UnsignedByteType;else if(i instanceof Float64Array)console.warn("ImageGLView.data is a Float64Array which WebGL does not support, will convert to a Float32Array (consider sending float32 data for better performance)."),i=Float32Array.from(i),s=l.FloatType;else{if(!(i instanceof Float32Array))return void console.error("only types uint8 and float32 are supported");s=l.FloatType}this.scales.image.model.get("scheme")&&2==t.shape.length?(this.texture&&this.texture.dispose(),this.texture=new l.DataTexture(i,t.shape[1],t.shape[0],l.LuminanceFormat,s),this.texture.needsUpdate=!0,this.image_material.uniforms.image.value=this.texture,this.image_material.defines.USE_COLORMAP=!0,this.image_material.needsUpdate=!0):3==t.shape.length?(this.image_material.defines.USE_COLORMAP=!1,this.texture&&this.texture.dispose(),3==t.shape[2]&&(this.texture=new l.DataTexture(i,t.shape[1],t.shape[0],l.RGBFormat,s)),4==t.shape[2]&&(this.texture=new l.DataTexture(i,t.shape[1],t.shape[0],l.RGBAFormat,s)),this.texture.needsUpdate=!0,this.image_material.uniforms.image.value=this.texture):console.error("image data not understood")}this.texture.magFilter=h[this.model.get("interpolation")],this.texture.minFilter=h[this.model.get("interpolation")]}update_scene(e){this.parent.update_gl()}render_gl(){var e=this.parent,t=e.renderer,s=(this.model.get("image"),this.scales.x?this.scales.x:this.parent.scale_x),i=this.scales.y?this.scales.y:this.parent.scale_y;this.camera.left=0,this.camera.right=e.plotarea_width,this.camera.bottom=0,this.camera.top=e.plotarea_height,this.camera.updateProjectionMatrix();var a=this.model.get("x"),n=this.model.get("y"),r=a[0],o=a[1],l=n[0],h=n[1],d=s.scale(r),c=s.scale(o),u=i.scale(l),m=c-d,_=i.scale(h)-u;this.image_mesh.position.set(d+m/2,e.plotarea_height-(u+_/2),0),this.image_mesh.scale.set(m,_,1),this.image_material.uniforms.range_x.value=s.scale.range(),this.image_material.uniforms.range_y.value=[i.scale.range()[1],i.scale.range()[0]],this.image_material.uniforms.domain_x.value=s.scale.domain(),this.image_material.uniforms.domain_y.value=i.scale.domain(),this.image_material.uniforms.image_domain_x.value=[r,o],this.image_material.uniforms.image_domain_y.value=[l,h],t.render(this.scene,this.camera),t.domElement}relayout(){this.update_scene()}draw(e){this.set_ranges()}}a.DOMWidgetModel.extend({defaults:n.extend(a.DOMWidgetModel.prototype.defaults(),{_model_name:"ImageMark",_view_name:"HelloView",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i,value:"Hello World"})})},8509:(e,t,s)=>{"use strict";s.r(t),s.d(t,{BrushEllipseSelectorModel:()=>r.Z,BrushRectangleSelectorModel:()=>h.q,ContourModel:()=>n.M,ContourView:()=>n.W,ImageGLModel:()=>i.S,ImageGLView:()=>i.y,LinesGLModel:()=>a.E,LinesGLView:()=>a.e,ViewListener:()=>u.s9,ViewListenerModel:()=>u.rr,__esModule:()=>r.B,version:()=>m.r});var i=s(8279),a=s(8577),n=s(6987),r=s(2321),o=s(8522),l={};for(const e in o)["default","ImageGLModel","ImageGLView","LinesGLModel","LinesGLView","ContourModel","ContourView","BrushEllipseSelectorModel","__esModule"].indexOf(e)<0&&(l[e]=()=>o[e]);s.d(t,l);var h=s(8840),d=s(5073);l={};for(const e in d)["default","ImageGLModel","ImageGLView","LinesGLModel","LinesGLView","ContourModel","ContourView","BrushEllipseSelectorModel","__esModule","BrushRectangleSelectorModel"].indexOf(e)<0&&(l[e]=()=>d[e]);s.d(t,l);var c=s(7864);l={};for(const e in c)["default","ImageGLModel","ImageGLView","LinesGLModel","LinesGLView","ContourModel","ContourView","BrushEllipseSelectorModel","__esModule","BrushRectangleSelectorModel"].indexOf(e)<0&&(l[e]=()=>c[e]);s.d(t,l);var u=s(8724),m=s(1797)},8577:(e,t,s)=>{"use strict";s.d(t,{E:()=>p,e:()=>g});var i=s(1797).r,a=(s(6300),s(1042)),n=(s(3871),s(9793)),r=s(7622),o=s(2483),l=s(2377).Line2,h=s(7234).LineMaterial,d=s(2863).LineGeometry;const c=s(8615).A,u=s(1951).A,m=s(9245).A,_={linear:1,log:2};class p extends n.LinesModel{defaults(){return a.extend(n.LinesModel.prototype.defaults(),{_model_name:"LinesGLModel",_view_name:"LinesGLView",_model_module:"bqplot-image-gl",_view_module:"bqplot-image-gl",_model_module_version:i,_view_module_version:i})}}class g extends n.Lines{async render(){this.uniforms={domain_x:{type:"3f",value:[0,1,1]},domain_y:{type:"3f",value:[0,1,1]},range_x:{type:"2f",value:[0,1]},range_y:{type:"2f",value:[0,1]},diffuse:{type:"3f",value:[1,0,0]},opacity:{type:"f",value:1}},this.scale_defines={},this.material=new h({blending:r.CustomBlending,blendSrc:r.OneFactor,blendDst:r.OneMinusSrcAlphaFactor,blendEquation:r.AddEquation,transparent:!0,depthFunc:r.LessDepth}),this.uniforms=this.material.uniforms={...this.material.uniforms,...this.uniforms};const e=await super.render();return window.lastLinesGLView=this,this.material.onBeforeCompile=e=>{e.vertexShader="// added by bqplot-image-gl\n"+c+u+"// added by bqplot-image-gl\n"+e.vertexShader;const t=e.vertexShader.indexOf("vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );");-1==t&&console.error("Could not find magic begin line in shader");const s=e.vertexShader.indexOf("vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );");-1==s&&console.error("Could not find magic end line in shader"),e.vertexShader=e.vertexShader.slice(0,t)+m+e.vertexShader.slice(s+54)},this._updateMaterialScales(),this.update_stroke_width(),this.geometry=new d,this._updateGeometry(),this.line=new l(this.geometry,this.material),this.line.frustumCulled=!1,this.camera=new r.OrthographicCamera(-.5,.5,.5,-.5,-1e4,1e4),this.camera.position.z=10,this.camera.updateProjectionMatrix(),this.scene=new r.Scene,this.scene.add(this.line),this.listenTo(this.model,"change:x change:y",this._updateGeometry,this),e}create_listeners(){super.create_listeners(),this.listenTo(this.model,"change:visible",(()=>{this.material.visible=this.model.get("visible"),this.update_scene()}),this)}_updateGeometry(){const e=new o.Values(["x","y","z"],[],((e,t,s)=>"z"===e?0:this.model.get(e)),0,[]);e.ensure_array("z"),e.merge_to_vec3(["x","y","z"],"position"),this.geometry.maxInstancedCount=void 0,this.geometry.setPositions(e.array_vec3.position)}update_style(){const e=new r.Color(this.model.get("colors")[0]);this.material.color=e.toArray();const t=this.model.get("opacities");t&&t.length?this.uniforms.opacity.value=t[0]:this.uniforms.opacity.value=1,this.update_scene()}update_stroke_width(){this.material.linewidth=this.model.get("stroke_width"),this.update_scene()}_updateMaterialScales(){const e={x:this.scales.x.model,y:this.scales.y.model},t={...this.scale_defines};for(const s of Object.keys(e)){const i=e[s].domain;let a=i[1]-i[0];"log"==e[s].type&&(a=Math.log(i[1])-Math.log(i[0])),this.uniforms[`domain_${s}`].value=[i[0],i[1],a],t[`SCALE_TYPE_${s}`]=_[e[s].type]}a.isEqual(this.scale_defines,t)||(this.scale_defines=t,this._updateMaterials())}_updateMaterials(){this.material.defines={...this.scale_defines,USE_SCALE_X:!0,USE_SCALE_Y:!0},this.material.needsUpdate=!0}update_line_xy(){this._updateMaterialScales(),this.update_scene()}render_gl(){var e=this.parent,t=e.renderer;this.camera.left=0,this.camera.right=e.plotarea_width,this.camera.bottom=0,this.camera.top=e.plotarea_height,this.camera.updateProjectionMatrix();const s=this.scales.x?this.scales.x:this.parent.scale_x,i=this.scales.y?this.scales.y:this.parent.scale_y,a=this.parent.padded_range("x",s.model),n=this.parent.padded_range("y",i.model);this.uniforms.range_x.value=a,this.uniforms.resolution.value=[e.plotarea_width,e.plotarea_height],this.uniforms.range_y.value=[n[1],n[0]],t.clearDepth(),t.render(this.scene,this.camera)}update_scene(e){this.parent.update_gl()}relayout(){this.update_scene()}draw(e){this.set_ranges(),this.update_line_xy(e),this.update_style()}}},5883:(e,t,s)=>{var i=s(4125),a=s(4576),n={int8:Int8Array,int16:Int16Array,int32:Int32Array,uint8:Uint8Array,uint16:Uint16Array,uint32:Uint32Array,float32:Float32Array,float64:Float64Array},r={Int8Array:"int8",Int16Array:"int16",Int32Array:"int32",Uint8Array:"uint8",Uint16Array:"uint16",Uint32Array:"uint32",Float32Array:"float32",Float64Array:"float64"};e.exports={array_or_json:{deserialize:function e(t,s){if(null==t)return null;var a=null;return i.isNumber(t)?t:(i.isArray(t)?0==t.length?arrays=[]:a=i.isArray(t[0])?i.map(t,(function(t){return e(t,s)})):t:t.value&&t.dtype?a=function(e){var t=n[e.dtype];null==e&&console.log("data is null"),e.value||console.log("data.buffer is null"),e.value.buffer||console.log("data.buffer is null");var s=new t(e.value.buffer);if(s.type=e.type,e.shape&&e.shape.length>=2){if(e.shape.length>2)throw new Error("only arrays with rank 1 or 2 supported");e.shape;for(var i=[],a=0;a<e.shape[0];a++)i.push(s.slice(a*e.shape[1],(a+1)*e.shape[1]));return i}return s}(t):console.error("not sure what the data is"),a)},serialize:function e(t,s){return null==t?null:i.isNumber(t)?t:i.isArray(t)?t.map((t=>e(t,s))):a(t)?function(e){null==e&&console.log("data is null"),e.buffer||console.log("ar.buffer is null or not defined");var t=r[e.constructor.name],s=e.type||null;return{dtype:t,value:new DataView(e.buffer),shape:[e.length],type:s}}(t):void 0}}}},5976:(e,t,s)=>{"use strict";s.r(t),s.d(t,{applyAttrs:()=>n,applyStyles:()=>a,is_typedarray:()=>r});const i=s(4576);function a(e,t){return Object.keys(t).forEach((s=>e.style(s,t[s]))),e}function n(e,t){return Object.keys(t).forEach((s=>e.attr(s,t[s]))),e}function r(e){return i(e)}},2483:function(e,t,s){"use strict";var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const a=s(1042),n=i(s(7622)),r=i(s(5976));class o{constructor(e,t,s,i,a=[]){this.length=1/0,this.scalar={},this.scalar_vec3={},this.scalar_vec4={},this.array={},this.array_vec3={},this.array_vec4={},this.values={};for(const t of e){const e=s(t,i,o.defaults[t]);r.is_typedarray(e)?("selected"!==t&&(this.length=Math.min(this.length,e.length)),this.array[t]=e):this.scalar[t]=e,this.values[t]=e}for(const e of t){let t=s(e,i,o.defaults[e]);if(-1!==e.indexOf("color")&&"string"==typeof t){const e=new n.Color(t);t=new Float32Array([e.r,e.g,e.b])}r.is_typedarray(t)&&t.length>3?(this.array_vec3[e]=t,this.length=Math.min(this.length,t.length/3)):this.scalar_vec3[e]=t,this.values[e]=t}for(const e of a){let t=s(e,i,o.defaults[e]);if(-1!==e.indexOf("color")&&"string"==typeof t){const e=new n.Color(t);t=new Float32Array([e.r,e.g,e.b,1])}r.is_typedarray(t)&&t.length>4?(this.array_vec4[e]=t,this.length=Math.min(this.length,t.length/4)):this.scalar_vec4[e]=t,this.values[e]=t}}trim(e){this.array=a.mapValues(this.array,(t=>t.length===e?t:t.slice(0,e))),this.array_vec3=a.mapValues(this.array_vec3,(t=>t.length===3*e?t:t.slice(0,3*e))),this.array_vec4=a.mapValues(this.array_vec4,(t=>t.length===4*e?t:t.slice(0,4*e))),this.length=e}ensure_array(e){const t=a.isArray(e)?e:[e];for(const e of t){void 0!==this.scalar[e]&&((this.array[e]=new Float32Array(this.length)).fill(this.scalar[e]),delete this.scalar[e],delete this.values[e]);const t=this.scalar_vec3[e],s=this.scalar_vec4[e];if(void 0!==t){const s=this.array_vec3[e]=new Float32Array(3*this.length);for(let e=0;e<this.length;e++)s[3*e+0]=t[0],s[3*e+1]=t[1],s[3*e+2]=t[2];delete this.scalar_vec3[e],delete this.values[e]}if(void 0!==s){this.array_vec4[e]=new Float32Array(4*this.length);const t=this.array_vec4[e];for(let e=0;e<this.length;e++)t[4*e+0]=s[0],t[4*e+1]=s[1],t[4*e+2]=s[2],t[4*e+3]=s[3];delete this.scalar_vec4[e],delete this.values[e]}}}grow(e){this.array=a.mapValues(this.array,(t=>{const s=new t.constructor(e);return s.set(t),s})),this.array_vec3=a.mapValues(this.array_vec3,(t=>{const s=new t.constructor(3*e);return s.set(t),s})),this.length=length}pad(e){this.array=a.mapValues(this.array,((t,s)=>{const i=new t.constructor(e.length);return void 0===e.array[s]?i.fill(e.scalar[s],this.length):i.set(e.array[s].slice(this.length),this.length),i.set(t),i})),this.array_vec3=a.mapValues(this.array_vec3,((t,s)=>{const i=new t.constructor(3*e.length);if(void 0===e.array_vec3[s]){const t=e.scalar_vec3[s];for(let s=this.length;s<e.length;s++)i[3*s+0]=t[0],i[3*s+1]=t[1],i[3*s+2]=t[2]}else i.set(e.array_vec3[s].slice(3*this.length),3*this.length);return i.set(t),i})),this.array_vec4=a.mapValues(this.array_vec4,((t,s)=>{const i=new t.constructor(4*e.length);if(void 0===e.array_vec4[s]){const t=e.scalar_vec4[s];for(let s=this.length;s<e.length;s++)i[4*s+0]=t[0],i[4*s+1]=t[1],i[4*s+2]=t[2],i[4*s+3]=t[3]}else i.set(e.array_vec4[s].slice(4*this.length),4*this.length);return i.set(t),i})),this.length=e.length}select(e){const t=this.array.size=this.array.size.slice(),s=this.array.size_selected,i=this.array_vec4.color=this.array_vec4.color.slice(),a=this.array_vec4.color_selected;e.forEach(((e,n)=>{n<this.length&&(t[n]=s[n],i[4*n+0]=a[4*n+0],i[4*n+1]=a[4*n+1],i[4*n+2]=a[4*n+2],i[4*n+3]=a[4*n+3])}))}merge_to_vec3(e,t){const s=e.length,i=new Float32Array(this.length*s);e.forEach(((e,t)=>{this.ensure_array(e);const a=this.array[e];for(let e=0;e<this.length;e++)i[e*s+t]=a[e];delete this.array[e],delete this.values[e]})),this.array_vec3[t]=i}pop(e){(a.isArray(e)?e:[e]).forEach(((e,t)=>{[this.scalar,this.scalar_vec3,this.array,this.array_vec3].forEach((t=>{void 0!==t[e]&&delete t[e]}))}))}add_attributes(e,t=""){a.forOwn(this.array,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(s,1,!1,1);e.addAttribute(i+t,a)}})),a.forOwn(this.array_vec3,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(s,3,!1,1);a.normalized=-1!==i.indexOf("color"),e.addAttribute(i+t,a)}})),a.forOwn(this.array_vec4,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(s,4,!1,1);a.normalized=-1!==i.indexOf("color"),e.addAttribute(i+t,a)}})),a.forOwn(this.scalar,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(new Float32Array([s]),1,!1,this.length);e.addAttribute(i+t,a)}})),a.forOwn(this.scalar_vec3,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(s,3,!1,this.length);a.normalized=-1!==i.indexOf("color"),e.addAttribute(i+t,a)}})),a.forOwn(this.scalar_vec4,((s,i)=>{if(-1===i.indexOf("selected")){const a=new n.InstancedBufferAttribute(s,4,!1,this.length);a.normalized=-1!==i.indexOf("color"),e.addAttribute(i+t,a)}}))}}t.Values=o,o.defaults={vx:0,vy:1,vz:0,x:0,y:0,z:0,size:0}},1797:(e,t,s)=>{"use strict";s.d(t,{r:()=>i});const i=s(8330).rE},5199:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});const i="#include <scales>\n\nvarying vec2 pixel_coordinate;\nuniform sampler2D image;\nuniform sampler2D colormap;\nuniform float color_min;\nuniform float color_max;\nuniform float opacity;\n\nuniform vec2 range_x;\nuniform vec2 range_y;\n\nuniform vec2 domain_x;\nuniform vec2 domain_y;\n\nuniform vec2 image_domain_x;\nuniform vec2 image_domain_y;\n\nuniform vec2 range_image;\n\n\nbool isnan(float val)\n{\n  return (val < 0.0 || 0.0 < val || val == 0.0) ? false : true;\n}\n\n\n\nvoid main(void) {\n    // bring pixels(range) to world space (domain)\n    float x_domain_value = scale_transform_linear_inverse(pixel_coordinate.x, range_x, domain_x);\n    float y_domain_value = scale_transform_linear_inverse(pixel_coordinate.y, range_y, domain_y);\n    // normalize the coordinates for the texture\n    float x_normalized   = scale_transform_linear(x_domain_value, vec2(0., 1.), image_domain_x);\n    float y_normalized   = scale_transform_linear(y_domain_value, vec2(0., 1.), image_domain_y);\n    vec2 tex_uv = vec2(x_normalized, y_normalized);\n#ifdef USE_COLORMAP\n    // r (or g or b) is used for the value, alpha for the mask (is 0 if a nan is found)\n    vec2 pixel_value = texture2D(image, tex_uv).ra;\n    float raw_value = pixel_value[0] * (range_image[1] - range_image[0]) + range_image[0];\n    float opacity_image = pixel_value[1];\n    float value = (raw_value - color_min) / (color_max - color_min);\n    vec4 color;\n    if(isnan(value)) // nan's are interpreted as missing values, and 'not shown'\n        color = vec4(0., 0., 0., 0.);\n    else\n        color = texture2D(colormap, vec2(value, 0.5));\n#else\n    vec4 color = texture2D(image, tex_uv);\n    float opacity_image = 1.0;\n#endif\n    // since we're working with pre multiplied colors (regarding blending)\n    // we also need to multiply rgb by opacity\n    gl_FragColor = color * opacity * opacity_image;\n}\n"},1741:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});const i="varying vec2 pixel_coordinate;\n\nvoid main(void) {\n    vec4 view_position = modelViewMatrix * vec4(position,1.0);\n    pixel_coordinate = view_position.xy;\n    gl_Position = projectionMatrix * view_position;\n}\n"},8615:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});const i="// these scale transformations use a vec3 for the domain where the last element [2] contains the delta\n// where for the log version, it contains log(domain[1]) - log(domain[0]).\n// This avoids rounding issues when using float32 math on the GPU, since\n// dividing by (domain[1] - domain[0]) can becomes a division by zero when\n// domain[1] - is in the range domain[0] * (1 + 1e-8), i.e. the relative float32\n// precision.\n// Instead, we compute the delta in Javascript, which uses float64.\n// This allows us to zoom into a line plot with abound 14 orders of magnitude\n// at around 1e15-1e16 we also start seeing rounding issues with float64.\n\nfloat scale_transform_linear(float domain_value, vec2 range, vec3 domain) {\n    float normalized = (domain_value - domain[0]) / (domain[2]);\n    float range_value = normalized * (range[1] - range[0]) + range[0];\n    return range_value;\n}\n\nfloat scale_transform_linear_inverse(float range_value, vec2 range, vec3 domain) {\n    float normalized = (range_value - range[0]) / (range[1] - range[0]);\n    float domain_value = normalized * (domain[2]) + domain[0];\n    return domain_value;\n}\n\nfloat scale_transform_log(float domain_value, vec2 range, vec3 domain) {\n    float normalized = (log(domain_value) - log(domain[0])) / (domain[2]);\n    float range_value = normalized * (range[1] - range[0]) + range[0];\n    return range_value;\n}\n\nfloat scale_transform_log_inverse(float range_value, vec2 range, vec3 domain) {\n    float normalized = (range_value - range[0]) / (range[1] - range[0]);\n    float domain_value = exp(normalized * (log(domain[1]) - log(domain[0])) + log(domain[0]));\n    return domain_value;\n}\n"},1951:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});const i="// we already have this in scales.glsl in ipyvolume, but not in bqplot\n#define SCALE_TYPE_LINEAR 1\n#define SCALE_TYPE_LOG 2\n\n#ifdef USE_SCALE_X\n    uniform vec3 domain_x;\n    uniform vec2 range_x;\n    #if SCALE_TYPE_x == SCALE_TYPE_LINEAR\n        #define SCALE_X(x) scale_transform_linear(x, range_x, domain_x)\n    #elif SCALE_TYPE_x == SCALE_TYPE_LOG\n        #define SCALE_X(x) scale_transform_log(x, range_x, domain_x)\n    #endif\n#endif\n\n#ifdef USE_SCALE_Y\n    uniform vec3 domain_y;\n    uniform vec2 range_y;\n    #if SCALE_TYPE_y == SCALE_TYPE_LINEAR\n        #define SCALE_Y(x) scale_transform_linear(x, range_y, domain_y)\n    #elif SCALE_TYPE_y == SCALE_TYPE_LOG\n        #define SCALE_Y(x) scale_transform_log(x, range_y, domain_y)\n    #endif\n#endif\n"},9245:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});const i="    // added by bqplot-image-gl\n    vec3 instanceStart_transformed = instanceStart;\n    vec3 instanceEnd_transformed = instanceEnd;\n    instanceStart_transformed.x = SCALE_X(instanceStart_transformed.x);\n    instanceStart_transformed.y = SCALE_Y(instanceStart_transformed.y);\n    instanceEnd_transformed.x = SCALE_X(instanceEnd_transformed.x);\n    instanceEnd_transformed.y = SCALE_Y(instanceEnd_transformed.y);\n    vec4 start = modelViewMatrix * vec4( instanceStart_transformed, 1.0 );\n    vec4 end = modelViewMatrix * vec4( instanceEnd_transformed, 1.0 );\n\n\n    // added by bqplot-image-gl\n"},8330:e=>{"use strict";e.exports={rE:"1.7.0"}}}]);